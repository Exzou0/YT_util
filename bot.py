import os
import telebot # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
import html # –æ–±—Ä–∞–±–æ—Ç–∫–∞ HTML-—Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—Å—Ç–∞—Ö
from telebot.types import ReplyKeyboardMarkup, KeyboardButton # –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –±–æ—Ç–∞ (–∫–Ω–æ–ø–∫–∏, —Ä–∞–∑–º–µ—Ç–∫–∞)
from googleapiclient.discovery import build # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å YouTube API (–ø–æ–∏—Å–∫ –≤–∏–¥–µ–æ)
from dotenv import load_dotenv
from yt_download import download_video
from yt_conv import download_audio

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ 
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º API-–∫–ª—é—á–∏ 
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
YOUTUBE_API_KEY = os.getenv("YOUTUBE_API_KEY")

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN, parse_mode="HTML") #–ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å HTML-—Ä–∞–∑–º–µ—Ç–∫—É –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö

#  –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üîç Search by query"))
    keyboard.add(KeyboardButton("üéµ Convert to MP3"))
    keyboard.add(KeyboardButton("üì• Download video"))
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ YouTube
def search_youtube(query):
    youtube = build("youtube", "v3", developerKey=YOUTUBE_API_KEY) # –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ YouTube API
    request = youtube.search().list(  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ
        q=query, part="snippet", type="video", maxResults=5
    )
    response = request.execute()
    
    videos = []
    for item in response.get("items", []): # –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HTML
        video_id = item["id"]["videoId"]
        title = html.escape(item["snippet"]["title"]) 
        video_url = f"https://www.youtube.com/watch?v={video_id}"
        videos.append(f"üé¨ <b>{title}</b>\nüîó {video_url}")
    
    return "\n\n".join(videos) if videos else "‚ùå No video found." #—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "Choose an action:", reply_markup=main_menu())

@bot.message_handler(func=lambda message: message.text == "üîç Search by query")
def handle_search(message):
    bot.send_message(message.chat.id, "Enter your search query:")
    bot.register_next_step_handler(message, process_search)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
def process_search(message):
    query = message.text.strip() # –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
    if query:
        bot.send_message(message.chat.id, "üîé Searching for videos... ‚è≥")
        videos = search_youtube(query)
        bot.send_message(message.chat.id, videos)
    else:
        bot.send_message(message.chat.id, "‚ö† Please enter a text query!")

@bot.message_handler(func=lambda message: message.text == "üì• Download video")
def handle_download_video(message):
    bot.send_message(message.chat.id, "Send the YouTube video link:")
    bot.register_next_step_handler(message, download_video)

@bot.message_handler(func=lambda message: message.text == "üéµ Convert to MP3")
def handle_download_audio(message):
    bot.send_message(message.chat.id, "Send the YouTube video link.")
    bot.register_next_step_handler(message, download_audio)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__": # –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ Bot is running...")
    bot.polling(none_stop=True) # –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
